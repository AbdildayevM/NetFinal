@model PaginatedList<NetFinal.Models.Food>

@{
    ViewData["Title"] = "Index";
}

<center><h1>Foods</h1></center>

<p>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Create">Create New</a>
    }
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Return</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Title
            </th>
            <th>
                Cost
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.FoodID">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.FoodID">Delete</a>
                    }
                    <a asp-action="Details" asp-route-id="@item.FoodID">Details</a>
                    @if (User.IsInRole("User"))
                    {
                        <a asp-controller="Orders" asp-action="Create" asp-area="Post" asp-route-clientid="1" asp-route-foodid="@item.FoodID" asp-route-address="Change Address" asp-route-numb="1" asp-route-totalcost="@item.Cost">Order</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>